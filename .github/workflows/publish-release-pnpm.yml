name: Publish Release Pnpm

on:
  push:
    tags:
      - "v*"

permissions: write-all

jobs: 
  publish-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetching tags
        run: git fetch --tags -f || true

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: "https://registry.npmjs.org"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: |
          yarn
          pnpm install --ignore-scripts --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish in NPM (as `@queenanya/baileys`)
        run: |
          pnpm publish --access public --no-git-checks
          pnpm deprecate @queenanya/baileys@"< ${{ github.ref_name }}" "This version is outdated, please upgrade to the latest version."
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true

      - name: Publish in NPM (teamolduser scope)
        run: |
          npx json -I -f package.json -e "this.name='@teamolduser/baileys'"
          pnpm publish --access public --no-git-checks --//registry.npmjs.org/:_authToken=$NPM_TOKEN
          pnpm deprecate @teamolduser/baileys@"< ${{ github.ref_name }}" "This version is outdated, please upgrade to the latest version."
          npx json -I -f package.json -e "this.name='@queenanya/baileys'"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true

      - name: Generate Changelog
        id: generate_changelog
        run: |
          changelog=$(npm run changelog:last --silent)
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "${changelog}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Make Package
        run: npm pack

      - name: Rename Pack
        run: mv *.tgz baileys.tgz

      - name: Create Release
        uses: meeDamian/github-release@2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          commitish: ${{ github.sha }}
          name: ${{ github.ref_name }}
          body: ${{ steps.generate_changelog.outputs.changelog }}
          draft: false
          prerelease: false
          files: baileys.tgz
          gzip: folders
          allow_override: true